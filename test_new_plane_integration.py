#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Plane API —Å –ø—Ä–æ–µ–∫—Ç–∞–º–∏
"""
import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.integrations.plane_api_new import plane_api_new
from app.utils.logger import bot_logger

async def test_new_plane_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Plane API"""
    print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é Plane API...")
    print(f"üìç URL: {plane_api_new.api_url}")
    print(f"üè¢ Workspace: {plane_api_new.workspace_slug}")
    print(f"‚úÖ Configured: {plane_api_new.configured}")
    print()
    
    if not plane_api_new.configured:
        print("‚ùå Plane API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return
    
    # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    print("üîç –®–∞–≥ 1: –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
    result = await plane_api_new.test_connection()
    
    if result['success']:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üè¢ Workspace: {result.get('workspace', 'N/A')}")
        print(f"üìä Projects: {result.get('projects_count', 0)}")
        print(f"üì° API Version: {result.get('api_version', 'N/A')}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è!")
        print(f"üî• Error: {result.get('error', 'Unknown error')}")
        return
    
    print()
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ email
    print("üîç –®–∞–≥ 2: –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ email...")
    test_email = "zarudesu@gmail.com"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π email
    
    try:
        tasks = await plane_api_new.get_user_tasks(test_email)
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á –¥–ª—è {test_email}: {len(tasks)}")
        
        if tasks:
            print(f"\nüìã –ü–µ—Ä–≤—ã–µ {min(5, len(tasks))} –∑–∞–¥–∞—á:")
            for i, task in enumerate(tasks[:5], 1):
                print(f"{i}. {task.state_emoji} {task.name}")
                print(f"   üìä Status: {task.state_name}")
                print(f"   üë§ Assignee: {task.assignee_name}")
                print(f"   üè¢ Project: {task.project_name}")
                print(f"   üîë Priority: {task.priority_emoji} {task.priority}")
                if task.target_date:
                    print(f"   üìÖ Due: {task.target_date}")
                print()
        else:
            print("üì≠ –ó–∞–¥–∞—á –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - Email –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π")
            print("   - –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á (–≤—Å–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã)")
            print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø—Ä–æ–µ–∫—Ç–∞–º")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á: {e}")
    
    print()
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –¥–ª—è –∞–¥–º–∏–Ω–∞ (–ø–æ telegram ID)
    print("üîç –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –¥–ª—è –∞–¥–º–∏–Ω–∞...")
    admin_user_id = 28795547  # ID –∞–¥–º–∏–Ω–∞
    
    try:
        tasks = await plane_api_new.get_all_assigned_tasks_by_user_id(admin_user_id)
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á –¥–ª—è admin {admin_user_id}: {len(tasks)}")
        
        if tasks:
            print(f"\nüìã –ó–∞–¥–∞—á–∏ –∞–¥–º–∏–Ω–∞:")
            for i, task in enumerate(tasks[:3], 1):
                print(f"{i}. {task.state_emoji} {task.name}")
                print(f"   üìä Status: {task.state_name}")
                print(f"   üè¢ Project: {task.project_name}")
                print()
        else:
            print("üì≠ –ó–∞–¥–∞—á –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –∞–¥–º–∏–Ω–∞")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É email –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á –∞–¥–º–∏–Ω–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_new_plane_integration())