#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

async def test_module_imports():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—å–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç daily_tasks –º–æ–¥—É–ª—è
        print("üìß 1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Daily Tasks –º–æ–¥—É–ª—è...")
        from app.modules.daily_tasks.router import router as daily_tasks_router
        print(f"  ‚úÖ Daily Tasks router: {type(daily_tasks_router)}")
        
        from app.modules.daily_tasks.email_handlers import router as email_router
        print(f"  ‚úÖ Email handlers: {type(email_router)}")
        
        from app.modules.daily_tasks.filters import IsAdminEmailFilter
        print(f"  ‚úÖ Admin email filter: {type(IsAdminEmailFilter)}")
        
    except Exception as e:
        print(f"  ‚ùå Daily Tasks module error: {e}")
        return False
    
    try:
        # –¢–µ—Å—Ç 2: –ò–º–ø–æ—Ä—Ç work_journal –º–æ–¥—É–ª—è
        print("\nüìù 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Work Journal –º–æ–¥—É–ª—è...")
        from app.modules.work_journal.router import router as work_journal_router
        print(f"  ‚úÖ Work Journal router: {type(work_journal_router)}")
        
        from app.modules.work_journal.text_handlers import router as text_router
        print(f"  ‚úÖ Text handlers: {type(text_router)}")
        
        from app.modules.work_journal.filters import IsWorkJournalActiveFilter
        print(f"  ‚úÖ Work Journal active filter: {type(IsWorkJournalActiveFilter)}")
        
    except Exception as e:
        print(f"  ‚ùå Work Journal module error: {e}")
        return False
    
    try:
        # –¢–µ—Å—Ç 3: –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ main —Å –Ω–æ–≤—ã–º–∏ –º–æ–¥—É–ª—è–º–∏
        print("\nüöÄ 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ main.py —Å –Ω–æ–≤—ã–º–∏ –º–æ–¥—É–ª—è–º–∏...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–¥—É–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
        print("  ‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"  ‚ùå Main module error: {e}")
        return False
    
    print("\nüéâ –í—Å–µ –º–æ–¥—É–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == "__main__":
    success = asyncio.run(test_module_imports())
    if success:
        print("\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢: –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        sys.exit(0)
    else:
        print("\n‚ùå –†–ï–ó–£–õ–¨–¢–ê–¢: –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –º–æ–¥—É–ª—å–Ω—ã–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏")
        sys.exit(1)
