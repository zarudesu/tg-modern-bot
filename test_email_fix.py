#!/usr/bin/env python3
"""
–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π email –æ–±—Ä–∞–±–æ—Ç–∫–∏

–ü—Ä–æ–≤–µ—Ä—è–µ–º:
1. IsAdminEmailFilter —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ
2. –ù–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
3. Admin ID 28795547 + zarudesu@gmail.com –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.modules.daily_tasks.filters import IsAdminEmailFilter
from app.config import settings


class MockMessage:
    def __init__(self, user_id, text):
        self.from_user = type('MockUser', (), {'id': user_id})()
        self.text = text


async def test_admin_email_filter():
    """–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ email"""
    print("üß™ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢: IsAdminEmailFilter")
    print(f"   –ê–¥–º–∏–Ω—ã –≤ config: {settings.admin_user_id_list}")
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä
    admin_email_filter = IsAdminEmailFilter()
    
    # –¢–µ—Å—Ç 1: Admin ID 28795547 + –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π email
    test_admin_id = 28795547
    test_email = "zarudesu@gmail.com"
    
    mock_message = MockMessage(test_admin_id, test_email)
    result = await admin_email_filter(mock_message)
    
    print(f"   ‚úÖ Admin {test_admin_id} + email '{test_email}': {result}")
    
    # –¢–µ—Å—Ç 2: –ù–µ admin + email
    non_admin_id = 99999999
    mock_message2 = MockMessage(non_admin_id, test_email)
    result2 = await admin_email_filter(mock_message2)
    
    print(f"   ‚ùå Non-admin {non_admin_id} + email '{test_email}': {result2}")
    
    # –¢–µ—Å—Ç 3: Admin + –Ω–µ email
    mock_message3 = MockMessage(test_admin_id, "–Ω–µ email —Ç–µ–∫—Å—Ç")
    result3 = await admin_email_filter(mock_message3)
    
    print(f"   ‚ùå Admin {test_admin_id} + –Ω–µ email: {result3}")
    
    return result  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å True –¥–ª—è –∞–¥–º–∏–Ω–∞ —Å email


async def test_email_handlers_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã email –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã email_handlers.py...")
    
    try:
        from app.modules.daily_tasks import email_handlers
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ router —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        router = email_handlers.router
        print(f"   ‚úÖ Router —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {router}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        handlers_count = len(router.message.handlers)
        print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ message handlers: {handlers_count}")
        
        # –û–∂–∏–¥–∞–µ–º –¢–û–õ–¨–ö–û 1 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è debug
        if handlers_count == 1:
            print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (debug —É–¥–∞–ª–µ–Ω)")
        else:
            print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {handlers_count}")
            
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ email_handlers: {e}")
        return False


async def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç"""
    print("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô EMAIL –û–ë–†–ê–ë–û–¢–ö–ò")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –§–∏–ª—å—Ç—Ä—ã
    try:
        filter_result = await test_admin_email_filter()
        if not filter_result:
            print("\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: IsAdminEmailFilter –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return False
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –≤ —Ç–µ—Å—Ç–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤  
    try:
        handlers_result = await test_email_handlers_structure()
        if not handlers_result:
            print("\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
            return False
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –≤ —Ç–µ—Å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {e}")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ –í–°–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
    print("‚úÖ Email –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è admin 28795547 –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å")
    print("‚úÖ zarudesu@gmail.com –±—É–¥–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
    print("‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–π debug –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω")
    return True


if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)