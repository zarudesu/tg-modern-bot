# Docker-compose только для Telegram бота
# Подключается к внешней базе данных

services:
  telegram-bot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: telegram-bot-app
    restart: unless-stopped
    
    environment:
      # Telegram Bot Configuration
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - ADMIN_USER_ID=${ADMIN_USER_ID}
      
      # External Database URLs (подключение к внешним контейнерам)
      - DATABASE_URL=postgresql+asyncpg://bot_user:bot_password_2024@telegram-bot-postgres:5432/telegram_bot
      - REDIS_URL=redis://:redis_password_2024@telegram-bot-redis:6379/0
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=json
    
    volumes:
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    
    networks:
      - telegram-bot-network  # Подключаемся к внешней сети
    
    healthcheck:
      test: ["CMD", "python", "-c", "import aiohttp; import asyncio; print('Bot is running')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Зависимости указываем как external (они должны быть уже запущены)
    external_links:
      - telegram-bot-postgres:postgres
      - telegram-bot-redis:redis

# Подключаемся к внешней сети, созданной базой данных
networks:
  telegram-bot-network:
    external: true
