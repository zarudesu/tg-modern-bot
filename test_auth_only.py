#!/usr/bin/env python3
"""
–¢–µ—Å—Ç auth middleware –≤ –∏–∑–æ–ª—è—Ü–∏–∏ - –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –±–æ—Ç–∞
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, '/Users/zardes/Projects/tg-mordern-bot')

from app.config import settings
from app.database.database import init_db, get_async_session
from app.database.models import BotUser
from sqlalchemy import select

async def test_auth_middleware():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º auth middleware –æ—Ç–¥–µ–ª—å–Ω–æ"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º auth middleware –≤ –∏–∑–æ–ª—è—Ü–∏–∏...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
        await init_db()
        print("‚úÖ Database initialized")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
        test_user_id = 123456789  # —Ç–≤–æ–π ID
        
        async for session in get_async_session():
            result = await session.execute(
                select(BotUser).where(BotUser.telegram_user_id == test_user_id)
            )
            db_user = result.scalar_one_or_none()
            
            print(f"‚úÖ User query completed: {db_user}")
            print(f"‚úÖ User role: {db_user.role if db_user else 'guest'}")
            
            # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ —Å–µ—Å—Å–∏–∏ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ—Ç –ø—Ä–æ–±–ª–µ–º
            break
            
        print("‚úÖ Session cycle completed without errors")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ç–æ—Ä–æ–π –∑–∞–ø—Ä–æ—Å
        async for session in get_async_session():
            result = await session.execute(
                select(BotUser).where(BotUser.telegram_user_id == test_user_id)
            )
            db_user = result.scalar_one_or_none()
            
            print(f"‚úÖ Second query completed: {db_user}")
            break
            
        print("‚úÖ Multiple session cycles work correctly")
        
    except Exception as e:
        print(f"‚ùå Error in auth middleware test: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_auth_middleware())
