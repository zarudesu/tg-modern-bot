"""
–ö–æ–º–∞–Ω–¥—ã –¥–ª—è AI Assistant
"""
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command

from ...core.ai.ai_manager import ai_manager
from ...core.ai.base import AIMessage, AIRole
from ...utils.logger import bot_logger

router = Router()


@router.message(Command("ai"))
async def ai_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å AI"""
    user_id = message.from_user.id
    text = message.text.replace("/ai", "").strip()

    if not text:
        await message.reply(
            "ü§ñ *AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç*\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `/ai –≤–∞—à –≤–æ–ø—Ä–æ—Å`\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã:\n"
            "‚Ä¢ `/ai —Ä–∞—Å—Å–∫–∞–∂–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ`\n"
            "‚Ä¢ `/ai —Å–æ–∑–¥–∞–π –∑–∞–¥–∞—á—É –¥–ª—è –Ω–æ–≤–æ–π —Ñ–∏—á–∏`\n"
            "‚Ä¢ `/ai —Å–¥–µ–ª–∞–π —Å—É–º–º–∞—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π`",
            parse_mode="Markdown"
        )
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±–æ—Ç –¥—É–º–∞–µ—Ç
    thinking_msg = await message.reply("ü§î –î—É–º–∞—é...")

    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
        response = await ai_manager.chat(
            user_message=text,
            system_prompt=(
                "–¢—ã - AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è Telegram –±–æ—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏. "
                "–¢—ã –ø–æ–º–æ–≥–∞–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∑–∞–¥–∞—á–∞–º–∏, –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏. "
                "–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É. –ò—Å–ø–æ–ª—å–∑—É–π markdown –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."
            )
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º
        await thinking_msg.edit_text(
            f"ü§ñ *AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:*\n\n{response.content}\n\n"
            f"_–ú–æ–¥–µ–ª—å: {response.model} | –¢–æ–∫–µ–Ω–æ–≤: {response.tokens_used}_",
            parse_mode="Markdown"
        )

        bot_logger.info(
            f"AI response generated for user {user_id}",
            extra={
                "model": response.model,
                "tokens": response.tokens_used,
                "time": response.processing_time
            }
        )

    except Exception as e:
        bot_logger.error(f"AI command error: {e}")
        await thinking_msg.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI.\n"
            f"–û—à–∏–±–∫–∞: {str(e)}",
            parse_mode="Markdown"
        )


@router.message(Command("ai_summary"))
async def ai_summary_command(message: Message):
    """–°–æ–∑–¥–∞—Ç—å AI —Å—É–º–º–∞—Ä–∏ —á–∞—Ç–∞"""
    await message.reply(
        "üìä *AI –°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞*\n\n"
        "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞—ë—Ç –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ.\n\n"
        "_–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ..._",
        parse_mode="Markdown"
    )


@router.message(Command("ai_auto_task"))
async def ai_auto_task_command(message: Message):
    """–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á"""
    await message.reply(
        "üéØ *–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á*\n\n"
        "AI –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –∑–∞–¥–∞—á–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ "
        "–∏ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–æ–∑–¥–∞—Ç—å –∏—Ö –≤ Plane.\n\n"
        "_–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ..._",
        parse_mode="Markdown"
    )


@router.message(Command("ai_help"))
async def ai_help_command(message: Message):
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ AI —Ñ—É–Ω–∫—Ü–∏—è–º"""
    help_text = """
ü§ñ *AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç - –°–ø—Ä–∞–≤–∫–∞*

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*

`/ai <–≤–æ–ø—Ä–æ—Å>` - –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å AI
`/ai_summary` - –°–æ–∑–¥–∞—Ç—å —Å—É–º–º–∞—Ä–∏ —á–∞—Ç–∞
`/ai_auto_task` - –ê–≤—Ç–æ-—Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á
`/ai_help` - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

*–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ AI:*
‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á
‚Ä¢ –°—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—è –æ–±—Å—É–∂–¥–µ–Ω–∏–π
‚Ä¢ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

*–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:*
```
/ai —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ –ø–æ –ø—Ä–æ–µ–∫—Ç—É?
/ai —Å–æ–∑–¥–∞–π –∑–∞–¥–∞—á—É –¥–ª—è –¥–µ–ø–ª–æ—è
/ai –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è
```
"""
    await message.reply(help_text, parse_mode="Markdown")
