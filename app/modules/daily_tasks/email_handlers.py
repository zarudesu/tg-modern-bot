"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ email –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ —Å email –æ—Ç –∞–¥–º–∏–Ω–æ–≤
–ò—Å–ø–æ–ª—å–∑—É—é—Ç —Ñ–∏–ª—å—Ç—Ä IsAdminEmailFilter –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ –æ—Ç –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
"""

from aiogram import Router
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy import select

from .filters import IsAdminEmailFilter
from ...database.database import get_async_session
from ...database.models import UserSession
from ...services.daily_tasks_service import daily_tasks_service
from ...utils.logger import bot_logger
from ...config import settings


router = Router()


def escape_markdown_v2(text: str) -> str:
    """–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è MarkdownV2"""
    chars_to_escape = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!', '@']
    for char in chars_to_escape:
        text = text.replace(char, f'\\{char}')
    return text


@router.message(IsAdminEmailFilter())
async def handle_admin_email_input(message: Message):
    """
    –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ email –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ daily_tasks
    
    –†–∞–±–æ—Ç–∞–µ—Ç –¢–û–õ–¨–ö–û —Å email –æ—Ç –∞–¥–º–∏–Ω–æ–≤ (ID –≤ settings.admin_user_id_list)
    –≠—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∏–∑–æ–ª—è—Ü–∏—é –æ—Ç –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
    """
    try:
        admin_id = message.from_user.id
        email = message.text.strip().lower()
        
        bot_logger.info(f"üéØ ADMIN EMAIL HANDLER TRIGGERED: {email} from admin {admin_id}")
        
        # –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –§–ò–ö–°: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–Ω–æ–≤–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        from ...services.daily_tasks_service import daily_tasks_service as dts_service
        
        if dts_service is None:
            bot_logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: daily_tasks_service = None –¥–ª—è admin {admin_id}")
            await message.reply(
                "‚ùå *–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã*\n\n"
                "–°–µ—Ä–≤–∏—Å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\\. "
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\\.",
                parse_mode="MarkdownV2"
            )
            return
            
        bot_logger.info(f"‚úÖ Daily tasks service –Ω–∞–π–¥–µ–Ω: {type(dts_service)}")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–º–µ—Å—Ç–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–π
        daily_tasks_service_local = dts_service
        
        async for session in get_async_session():
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º email –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–µ—Ä–≤–∏—Å–∞
            if admin_id not in daily_tasks_service_local.admin_settings:
                daily_tasks_service_local.admin_settings[admin_id] = {}
                bot_logger.info(f"üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è admin {admin_id}")
            
            daily_tasks_service_local.admin_settings[admin_id]['plane_email'] = email
            bot_logger.info(f"üìß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º email {email} –¥–ª—è admin {admin_id}")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î
            save_result = await daily_tasks_service_local._save_admin_settings_to_db()
            
            bot_logger.info(f"‚úÖ Email {email} saved for admin {admin_id}, result: {save_result}")
            
            # üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º background –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–¥–∞—á
            if save_result:
                from ...services.user_tasks_cache_service import user_tasks_cache_service
                sync_started = await user_tasks_cache_service.start_user_sync(
                    user_email=email,
                    telegram_user_id=admin_id,
                    notify_user=True
                )
                if sync_started:
                    bot_logger.info(f"üîÑ Background sync started for {email}")
                else:
                    bot_logger.warning(f"‚ö†Ô∏è Background sync not started for {email} (already in progress?)")
        
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Å–µ—Å—Å–∏—é
            result = await session.execute(
                select(UserSession).where(UserSession.telegram_user_id == admin_id)
            )
            user_session = result.scalar_one_or_none()
            
            if user_session:
                # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                user_session.last_command = None
                user_session.context = {}
                await session.commit()
            
            # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è MarkdownV2
            email_escaped = escape_markdown_v2(email)
            
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="back_to_settings")],
                [InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="start_menu")]
            ])
            
            await message.reply(
                f"‚úÖ *Email —Å–æ—Ö—Ä–∞–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ*\n\n"
                f"üìß *Email:* {email_escaped}\n"
                f"üë§ *–ê–¥–º–∏–Ω ID:* {admin_id}\n\n"
                f"–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –Ω–∞ —ç—Ç–æ—Ç email\\.",
                reply_markup=keyboard,
                parse_mode="MarkdownV2"
            )
            
    except Exception as e:
        bot_logger.error(f"‚ùå Error saving admin email {email} for admin {admin_id}: {e}")
        await message.reply(
            "‚ùå *–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è email*\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É\\.",
            parse_mode="MarkdownV2"  
        )


# DEBUG –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ IsAdminEmailFilter –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏