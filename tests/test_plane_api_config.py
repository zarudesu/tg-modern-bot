#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Plane API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
"""

import sys
sys.path.append('.')

def test_plane_api_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Plane API"""
    print("üõ´ –¢–ï–°–¢ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò PLANE API")
    print("=" * 50)
    
    try:
        from app.config import settings
        from app.integrations.plane_api import plane_api
        
        print("üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Plane API:")
        print(f"   PLANE_BASE_URL: {getattr(settings, 'plane_base_url', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")
        print(f"   PLANE_API_TOKEN: {'–£–°–¢–ê–ù–û–í–õ–ï–ù' if getattr(settings, 'plane_api_token', None) else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û'}")  
        print(f"   PLANE_WORKSPACE_SLUG: {getattr(settings, 'plane_workspace_slug', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")
        
        print(f"\nüîß –°–æ—Å—Ç–æ—è–Ω–∏–µ plane_api:")
        print(f"   configured: {plane_api.configured}")
        print(f"   base_url: {plane_api.base_url}")
        print(f"   workspace_slug: {plane_api.workspace_slug}")
        
        if plane_api.configured:
            print("‚úÖ Plane API –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ùå Plane API –ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω - —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
            print("\nüîß –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Plane API:")
            print("   1. –ü–æ–ª—É—á–∏—Ç–µ API —Ç–æ–∫–µ–Ω –æ—Ç Plane")
            print("   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π BASE_URL") 
            print("   3. –£–∫–∞–∂–∏—Ç–µ WORKSPACE_SLUG")
            
        return plane_api.configured
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

async def test_plane_api_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Plane API"""
    print("\nüîó –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö PLANE API")
    print("=" * 50)
    
    try:
        from app.integrations.plane_api import plane_api
        
        if not plane_api.configured:
            print("‚ùå Plane API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            return False
            
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
        result = await plane_api.test_connection()
        
        if result.get('success'):
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Plane API —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            error = result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {error}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def create_plane_api_demo_config():
    """–°–æ–∑–¥–∞–µ–º –¥–µ–º–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüìù –°–û–ó–î–ê–ù–ò–ï –î–ï–ú–û –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò")
    print("=" * 50)
    
    demo_config = '''# ‚úàÔ∏è Plane API Integration (DEMO - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)
PLANE_API_URL=https://demo-plane-instance.com  
PLANE_API_TOKEN=demo_token_replace_with_real
PLANE_WORKSPACE_SLUG=demo-workspace

# –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
# 1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ https://plane.so
# 2. –°–æ–∑–¥–∞–π—Ç–µ workspace 
# 3. –ü–æ–ª—É—á–∏—Ç–µ API —Ç–æ–∫–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
# 4. –ó–∞–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã—à–µ
'''
    
    try:
        with open('.env.plane_demo', 'w') as f:
            f.write(demo_config)
        
        print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.plane_demo —Å –¥–µ–º–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
        print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –≤–∞—à .env —Ñ–∞–π–ª")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üéØ –ü–û–õ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê PLANE API")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    config_ok = test_plane_api_config()
    
    # –¢–µ—Å—Ç 2: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
    connection_ok = False
    if config_ok:
        connection_ok = await test_plane_api_connection()
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    demo_created = create_plane_api_demo_config()
    
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {'–û–ö' if config_ok else '–¢–†–ï–ë–£–ï–¢ –ù–ê–°–¢–†–û–ô–ö–ò'}")
    print(f"   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {'–û–ö' if connection_ok else '–ù–ï –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù–û'}")  
    print(f"   ‚úÖ –î–µ–º–æ —Å–æ–∑–¥–∞–Ω: {'–û–ö' if demo_created else '–û–®–ò–ë–ö–ê'}")
    
    if not config_ok:
        print("\n‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –ù–ê–°–¢–†–û–ô–ö–ê PLANE API")
        print("   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∞–π–ª .env.plane_demo –∫–∞–∫ —à–∞–±–ª–æ–Ω")
    elif config_ok and connection_ok:
        print("\nüéâ PLANE API –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!")
    elif config_ok and not connection_ok:
        print("\n‚ö†Ô∏è PLANE API –ù–ê–°–¢–†–û–ï–ù, –ù–û –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ï –†–ê–ë–û–¢–ê–ï–¢")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞")

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())