#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–∑–æ–ª—è—Ü–∏–∏ –º–æ–¥—É–ª–µ–π –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ email –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ daily_tasks, –∞ –Ω–µ –≤ work_journal
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

async def test_email_isolation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–ª—è—Ü–∏–∏ email –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    print("üß™ –¢–µ—Å—Ç –∏–∑–æ–ª—è—Ü–∏–∏ –º–æ–¥—É–ª–µ–π")
    print("=" * 50)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∞ —Å ID 28795547
    admin_id = 28795547
    test_email = "zarudesu@gmail.com"
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        from app.modules.daily_tasks.filters import IsAdminEmailFilter
        from app.modules.work_journal.filters import IsWorkJournalActiveFilter
        from app.config import settings
        
        print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω ID: {admin_id}")
        print(f"üìß –¢–µ—Å—Ç–æ–≤—ã–π email: {test_email}")
        print(f"üîß –ê–¥–º–∏–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ: {settings.admin_user_id_list}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–¥–º–∏–Ω ID –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
        is_admin_configured = admin_id in settings.admin_user_id_list
        print(f"‚úÖ –ê–¥–º–∏–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {is_admin_configured}")
        
        if not is_admin_configured:
            print("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
            print("   –î–æ–±–∞–≤—å—Ç–µ –≤ .env: ADMIN_USER_ID=28795547")
        
        print("\nüìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ email —Ñ–∏–ª—å—Ç—Ä–æ–≤:")
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        class MockUser:
            def __init__(self, user_id):
                self.id = user_id
        
        class MockMessage:
            def __init__(self, text, user_id):
                self.text = text
                self.from_user = MockUser(user_id)
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        email_message = MockMessage(test_email, admin_id)
        text_message = MockMessage("–æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç", admin_id)
        
        # –¢–µ—Å—Ç 1: Email —Ñ–∏–ª—å—Ç—Ä –¥–ª—è daily_tasks
        email_filter = IsAdminEmailFilter()
        should_handle_email = await email_filter(email_message)
        should_ignore_text = await email_filter(text_message)
        
        print(f"  üìß Email '{test_email}' ‚Üí daily_tasks: {should_handle_email}")
        print(f"  üìù –¢–µ–∫—Å—Ç '–æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç' ‚Üí daily_tasks: {should_ignore_text}")
        
        # –¢–µ—Å—Ç 2: Work journal —Ñ–∏–ª—å—Ç—Ä –ù–ï –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å email
        # (–ø–æ—Å–∫–æ–ª—å–∫—É —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è work_journal)
        wj_filter = IsWorkJournalActiveFilter()
        wj_should_ignore_email = await wj_filter(email_message)
        wj_should_ignore_text = await wj_filter(text_message)
        
        print(f"  üìß Email '{test_email}' ‚Üí work_journal: {wj_should_ignore_email}")
        print(f"  üìù –¢–µ–∫—Å—Ç '–æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç' ‚Üí work_journal: {wj_should_ignore_text}")
        
        # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        print("\nüéØ –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–ª—è—Ü–∏–∏:")
        
        if should_handle_email and not wj_should_ignore_email:
            print("  ‚úÖ Email –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –¢–û–õ–¨–ö–û –≤ daily_tasks")
        elif should_handle_email and wj_should_ignore_email:
            print("  ‚ö†Ô∏è  Email –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –û–ë–û–ò–• –º–æ–¥—É–ª—è—Ö - –≤–æ–∑–º–æ–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç!")
        elif not should_handle_email:
            print("  ‚ùå Email –ù–ï –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ daily_tasks - –ø—Ä–æ–±–ª–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–∞!")
        
        if not should_ignore_text and not wj_should_ignore_text:
            print("  ‚úÖ –û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è –û–ë–û–ò–ú–ò –º–æ–¥—É–ª—è–º–∏ (–±–µ–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π)")
        
        print("\nüîç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("  üìß Email –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –¢–û–õ–¨–ö–û –≤ daily_tasks")
        print("  üìù Work_journal –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¢–û–õ–¨–ö–û –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö")
        print("  üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: daily_tasks > work_journal")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = asyncio.run(test_email_isolation())
    if success:
        print("\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢: –¢–µ—Å—Ç –∏–∑–æ–ª—è—Ü–∏–∏ –º–æ–¥—É–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω")
    else:
        print("\n‚ùå –†–ï–ó–£–õ–¨–¢–ê–¢: –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–∑–æ–ª—è—Ü–∏–∏")
    sys.exit(0 if success else 1)
