"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –º–æ–¥—É–ª—è –∂—É—Ä–Ω–∞–ª–∞ —Ä–∞–±–æ—Ç –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
from datetime import date, timedelta

# –¢–µ—Å—Ç 1: –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è
print("1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–π...")
try:
    from app.utils.work_journal_constants import (
        WorkJournalState, 
        N8nSyncStatus, 
        DEFAULT_COMPANIES, 
        DEFAULT_WORKERS,
        CallbackAction,
        EMOJI
    )
    
    print(f"   ‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏—è: {len(WorkJournalState)} —à—Ç—É–∫")
    print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å—ã n8n: {len(N8nSyncStatus)} —à—Ç—É–∫")
    print(f"   ‚úÖ –ö–æ–º–ø–∞–Ω–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {len(DEFAULT_COMPANIES)} —à—Ç—É–∫")
    print(f"   ‚úÖ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {len(DEFAULT_WORKERS)} —à—Ç—É–∫")
    print(f"   ‚úÖ –î–µ–π—Å—Ç–≤–∏—è callback: {len(CallbackAction)} —à—Ç—É–∫")
    print(f"   ‚úÖ –≠–º–æ–¥–∑–∏: {len(EMOJI)} —à—Ç—É–∫")
    
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

# –¢–µ—Å—Ç 2: –§–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã
print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–æ–≤...")
try:
    from app.utils.work_journal_formatters import (
        escape_markdown_v2,
        format_date_for_display,
        format_help_message,
        format_error_message,
        format_success_message
    )
    
    # –¢–µ—Å—Ç —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    test_text = "–¢–µ—Å—Ç —Å [—Å–∏–º–≤–æ–ª–∞–º–∏] (–¥–ª—è) —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!"
    escaped = escape_markdown_v2(test_text)
    print(f"   ‚úÖ –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {len(escaped)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç
    today = date.today()
    yesterday = today - timedelta(days=1)
    
    today_formatted = format_date_for_display(today)
    yesterday_formatted = format_date_for_display(yesterday)
    
    print(f"   ‚úÖ –°–µ–≥–æ–¥–Ω—è: {today_formatted}")
    print(f"   ‚úÖ –í—á–µ—Ä–∞: {yesterday_formatted}")
    
    # –¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
    help_text = format_help_message()
    error_text = format_error_message("general")
    success_text = format_success_message("created")
    
    print(f"   ‚úÖ –°–ø—Ä–∞–≤–∫–∞: {len(help_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   ‚úÖ –û—à–∏–±–∫–∞: {len(error_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   ‚úÖ –£—Å–ø–µ—Ö: {len(success_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

# –¢–µ—Å—Ç 3: –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä...")
try:
    from app.utils.work_journal_keyboards import (
        build_callback_data,
        parse_callback_data,
        create_date_selection_keyboard,
        create_company_selection_keyboard,
        create_duration_selection_keyboard,
        create_travel_selection_keyboard,
        create_worker_selection_keyboard,
        create_confirmation_keyboard
    )
    
    # –¢–µ—Å—Ç callback –¥–∞–Ω–Ω—ã—Ö
    callback_data = build_callback_data(CallbackAction.SELECT_COMPANY, "–¢–µ—Å—Ç –ö–æ–º–ø–∞–Ω–∏—è")
    action, data = parse_callback_data(callback_data)
    
    print(f"   ‚úÖ Callback —Å–æ–∑–¥–∞–Ω: {callback_data}")
    print(f"   ‚úÖ Callback —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω: –¥–µ–π—Å—Ç–≤–∏–µ='{action}', –¥–∞–Ω–Ω—ã–µ='{data}'")
    
    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
    date_kb = create_date_selection_keyboard()
    company_kb = create_company_selection_keyboard(DEFAULT_COMPANIES[:6])  # –ü–µ—Ä–≤—ã–µ 6 –∫–æ–º–ø–∞–Ω–∏–π
    duration_kb = create_duration_selection_keyboard()
    travel_kb = create_travel_selection_keyboard()
    worker_kb = create_worker_selection_keyboard(DEFAULT_WORKERS)
    confirm_kb = create_confirmation_keyboard()
    
    print(f"   ‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–∞—Ç—ã: {len(date_kb.inline_keyboard)} —Ä—è–¥–æ–≤")
    print(f"   ‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–π: {len(company_kb.inline_keyboard)} —Ä—è–¥–æ–≤")
    print(f"   ‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {len(duration_kb.inline_keyboard)} —Ä—è–¥–æ–≤")
    print(f"   ‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–µ–∑–¥–∞: {len(travel_kb.inline_keyboard)} —Ä—è–¥–æ–≤")
    print(f"   ‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π: {len(worker_kb.inline_keyboard)} —Ä—è–¥–æ–≤")
    print(f"   ‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {len(confirm_kb.inline_keyboard)} —Ä—è–¥–æ–≤")
    
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

# –¢–µ—Å—Ç 4: –ú–æ–¥–µ–ª–∏ (–±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î)
print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π...")
try:
    from app.database.work_journal_models import (
        WorkJournalEntry,
        UserWorkJournalState, 
        WorkJournalCompany,
        WorkJournalWorker
    )
    
    print(f"   ‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–ø–∏—Å–∏ –∂—É—Ä–Ω–∞–ª–∞: {WorkJournalEntry.__tablename__}")
    print(f"   ‚úÖ –ú–æ–¥–µ–ª—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {UserWorkJournalState.__tablename__}")
    print(f"   ‚úÖ –ú–æ–¥–µ–ª—å –∫–æ–º–ø–∞–Ω–∏–∏: {WorkJournalCompany.__tablename__}")
    print(f"   ‚úÖ –ú–æ–¥–µ–ª—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è: {WorkJournalWorker.__tablename__}")
    
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

# –¢–µ—Å—Ç 5: n8n —Å–µ—Ä–≤–∏—Å (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è)
print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ n8n —Å–µ—Ä–≤–∏—Å–∞...")
try:
    from app.services.n8n_integration_service import N8nIntegrationService
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    n8n_service = N8nIntegrationService(
        webhook_url="https://test.example.com/webhook",
        webhook_secret="test_secret"
    )
    
    print(f"   ‚úÖ –°–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω —Å URL: {n8n_service.webhook_url}")
    print(f"   ‚úÖ –¢–∞–π–º–∞—É—Ç: {n8n_service.timeout}—Å")
    print(f"   ‚úÖ –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫: {n8n_service.max_retries}")
    
    # –¢–µ—Å—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö (mock)
    from datetime import datetime
    
    # –°–æ–∑–¥–∞–µ–º mock-–æ–±—ä–µ–∫—Ç –∑–∞–ø–∏—Å–∏
    class MockEntry:
        def __init__(self):
            self.id = 123
            self.telegram_user_id = 123456789
            self.user_email = "test@example.com"
            self.work_date = date.today()
            self.company = "–¢–µ—Å—Ç –ö–æ–º–ø–∞–Ω–∏—è"
            self.work_duration = "30 –º–∏–Ω"
            self.work_description = "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
            self.is_travel = True
            self.worker_name = "–¢–µ—Å—Ç–æ–≤—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"
            self.created_at = datetime.now()
            self.n8n_sync_attempts = 0
    
    mock_entry = MockEntry()
    mock_user_data = {"first_name": "Test", "username": "test_user"}
    
    webhook_data = n8n_service._prepare_webhook_data(mock_entry, mock_user_data)
    
    print(f"   ‚úÖ –î–∞–Ω–Ω—ã–µ webhook –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã: {len(str(webhook_data))} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   ‚úÖ Source: {webhook_data['source']}")
    print(f"   ‚úÖ Event type: {webhook_data['event_type']}")
    print(f"   ‚úÖ Entry ID: {webhook_data['data']['entry_id']}")
    
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

# –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
print("\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
try:
    from app.handlers.work_journal import router
    
    print(f"   ‚úÖ –†–æ—É—Ç–µ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: {type(router)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    from app.handlers.work_journal import (
        start_journal_entry,
        handle_journal_callback,
        get_user_email
    )
    
    print(f"   ‚úÖ –§—É–Ω–∫—Ü–∏—è start_journal_entry: {callable(start_journal_entry)}")
    print(f"   ‚úÖ –§—É–Ω–∫—Ü–∏—è handle_journal_callback: {callable(handle_journal_callback)}")
    print(f"   ‚úÖ –§—É–Ω–∫—Ü–∏—è get_user_email: {callable(get_user_email)}")
    
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

print("\n" + "="*60)
print("üéâ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
print("="*60)
print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–¥—É–ª—è –∂—É—Ä–Ω–∞–ª–∞ —Ä–∞–±–æ—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã")
print("‚úÖ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ") 
print("‚úÖ –§–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —Ç–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
print("‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫")
print("‚úÖ –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
print("‚úÖ n8n —Å–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
print("\nüìã –ú–û–î–£–õ–¨ –ñ–£–†–ù–ê–õ–ê –†–ê–ë–û–¢ –ì–û–¢–û–í –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!")
print("\nüöÄ –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
print("   make db-up  # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
print("   make dev    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
