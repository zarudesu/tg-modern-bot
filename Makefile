# Makefile –¥–ª—è HHIVP IT Assistant Bot

.PHONY: help install dev-install test clean build
.PHONY: db-up db-down db-logs db-shell db-backup db-restore
.PHONY: bot-up bot-down bot-logs bot-shell bot-start bot-stop bot-restart bot-status
.PHONY: dev dev-stop dev-restart
.PHONY: full-up full-down full-logs full-clean

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
help:
	@echo "ü§ñ HHIVP IT Assistant Bot - –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
	@echo ""
	@echo "üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:"
	@echo "  dev          - –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–ë–î + –±–æ—Ç)"
	@echo "  dev-stop     - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  dev-restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo ""
	@echo "ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º:"
	@echo "  bot-start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
	@echo "  bot-stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
	@echo "  bot-restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
	@echo "  bot-status   - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
	@echo "  bot-logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞"
	@echo ""
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞:"
	@echo "  install      - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ venv"
	@echo "  dev-install  - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  test         - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
	@echo "  clean        - –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo ""
	@echo "üóÑÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ):"
	@echo "  db-up        - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –ë–î (PostgreSQL + Redis)"
	@echo "  db-down      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ë–î"
	@echo "  db-logs      - –õ–æ–≥–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
	@echo "  db-shell     - PostgreSQL –∫–æ–Ω—Å–æ–ª—å"
	@echo "  db-backup    - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –ë–î"
	@echo ""
	@echo "üöÄ Production –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  prod-deploy  - –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ Production"
	@echo "  prod-up      - –ó–∞–ø—É—Å—Ç–∏—Ç—å Production —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  prod-down    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Production —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  prod-logs    - –õ–æ–≥–∏ Production –±–æ—Ç–∞"
	@echo "  prod-status  - –°—Ç–∞—Ç—É—Å Production —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  prod-backup  - –ë—ç–∫–∞–ø Production –ë–î"
	@echo ""
	@echo "  db-logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ë–î"
	@echo "  db-shell     - –í–æ–π—Ç–∏ –≤ PostgreSQL"
	@echo "  db-backup    - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –ë–î"
	@echo "  db-restore   - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ë–î –∏–∑ –±—ç–∫–∞–ø–∞"
	@echo "  db-admin     - –ó–∞–ø—É—Å—Ç–∏—Ç—å pgAdmin (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)"
	@echo ""
	@echo "ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ):"
	@echo "  bot-up       - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –±–æ—Ç–∞ (–ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –ë–î)"
	@echo "  bot-down     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
	@echo "  bot-logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞"
	@echo "  bot-shell    - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞"
	@echo "  bot-dev      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo ""
	@echo "üöÄ –ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫:"
	@echo "  full-up      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—ë (–ë–î + –±–æ—Ç)"
	@echo "  full-down    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—ë"
	@echo "  full-logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ–≥–æ —Å—Ç–µ–∫–∞"
	@echo "  full-clean   - –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ)"

# =====================================
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
# =====================================

install:
	python3 -m venv venv
	./venv/bin/pip install -r requirements.txt

dev-install: install
	./venv/bin/pip install black flake8 mypy pytest pytest-asyncio

test:
	python3 test_basic.py

clean:
	find . -type d -name "__pycache__" -exec rm -rf {} +
	find . -name "*.pyc" -delete
	find . -name "*.pyo" -delete
	find . -name "*.pyd" -delete
	find . -name ".coverage" -delete
	find . -name "*.cover" -delete
	find . -name "*.log" -delete

# =====================================
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ)
# =====================================

db-up:
	@echo "üóÑÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
	docker-compose -f docker-compose.database.yml up -d postgres redis
	@echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞!"
	@echo "üîó PostgreSQL: localhost:5432"
	@echo "üîó Redis: localhost:6379"

db-down:
	@echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
	docker-compose -f docker-compose.database.yml down

db-logs:
	docker-compose -f docker-compose.database.yml logs -f postgres redis

db-shell:
	docker-compose -f docker-compose.database.yml exec postgres psql -U bot_user -d telegram_bot

db-admin:
	@echo "üåê –ó–∞–ø—É—Å–∫–∞–µ–º pgAdmin..."
	docker-compose -f docker-compose.database.yml --profile admin up -d pgadmin
	@echo "‚úÖ pgAdmin –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080"
	@echo "üìß Email: admin@example.com"
	@echo "üîë Password: admin_password_2024"

db-backup:
	@echo "üíæ –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	mkdir -p backups
	docker-compose -f docker-compose.database.yml exec postgres pg_dump -U bot_user -d telegram_bot | gzip > backups/backup_$(shell date +%Y%m%d_%H%M%S).sql.gz
	@echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ backups/"

db-restore:
	@echo "‚ö†Ô∏è  –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±—ç–∫–∞–ø–∞..."
	@if [ -z "$(BACKUP_FILE)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –±—ç–∫–∞–ø–∞: make db-restore BACKUP_FILE=backups/backup_20240101_120000.sql.gz"; \
		exit 1; \
	fi
	gunzip -c $(BACKUP_FILE) | docker-compose -f docker-compose.database.yml exec -T postgres psql -U bot_user -d telegram_bot

# =====================================
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ)
# =====================================

bot-up:
	@echo "ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞..."
	@echo "‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞: make db-up"
	docker-compose -f docker-compose.bot.yml up -d
	@echo "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!"

bot-down:
	@echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞..."
	docker-compose -f docker-compose.bot.yml down

bot-logs:
	docker-compose -f docker-compose.bot.yml logs -f telegram-bot

bot-shell:
	docker-compose -f docker-compose.bot.yml exec telegram-bot bash

bot-dev:
	@echo "üîß –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@if [ ! -f ".env.dev" ]; then \
		echo "‚ùå –°–æ–∑–¥–∞–π—Ç–µ .env.dev —Ñ–∞–π–ª –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"; \
		exit 1; \
	fi
	cp .env.dev .env
	./venv/bin/python -m app.main

# =====================================
# –ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫
# =====================================

full-up:
	@echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π —Å—Ç–µ–∫..."
	docker-compose up -d
	@echo "‚úÖ –ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –∑–∞–ø—É—â–µ–Ω!"

full-down:
	@echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–Ω—ã–π —Å—Ç–µ–∫..."
	docker-compose down

full-logs:
	docker-compose logs -f

full-clean:
	@echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ!"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? [y/N] " confirm && [ "$$confirm" = "y" ]
	docker-compose down -v
	docker-compose -f docker-compose.database.yml down -v
	docker-compose -f docker-compose.bot.yml down -v
	docker system prune -f
	@echo "‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# =====================================
# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
# =====================================

format:
	./venv/bin/black app/
	./venv/bin/flake8 app/ --max-line-length=100

typecheck:
	./venv/bin/mypy app/ --ignore-missing-imports

check: format typecheck test
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!"

# =====================================
# –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã
# =====================================

dev: db-up bot-dev    # –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

dev-stop: db-down     # –ë—ã—Å—Ç—Ä–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

dev-restart: dev-stop dev  # –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫

status:               # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
	@docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" --filter "name=telegram-bot"

# Production –∫–æ–º–∞–Ω–¥—ã
.PHONY: prod-deploy prod-up prod-down prod-logs prod-status prod-backup

# Production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
prod-deploy:
	@echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ Production..."
	./deploy-prod.sh

# Production —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
prod-up:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ Production —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose -f docker-compose.prod.yml up -d

prod-down:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Production —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose -f docker-compose.prod.yml down

prod-logs:
	@echo "üìã Production –ª–æ–≥–∏:"
	docker-compose -f docker-compose.prod.yml logs -f bot

prod-status:
	@echo "üìä –°—Ç–∞—Ç—É—Å Production —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose -f docker-compose.prod.yml ps

prod-backup:
	@echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ Production –ë–î..."
	mkdir -p backups
	docker exec hhivp-bot-postgres-prod pg_dump -U hhivp_bot hhivp_bot_prod > backups/backup_$$(date +%Y%m%d_%H%M%S).sql
	@echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ backups/"

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
nuclear-clean:
	@echo "‚ò¢Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö!"
	@echo "üö® –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –æ–±—Ä–∞–∑—ã –∏ –¥–∞–Ω–Ω—ã–µ!"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (–≤–≤–µ–¥–∏—Ç–µ 'yes'): " confirm && [ "$$confirm" = "yes" ]
	docker-compose -f docker-compose.yml down -v
	docker-compose -f docker-compose.prod.yml down -v
	docker system prune -af --volumes
	rm -rf logs/* backups/*


# =====================================
# –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º
# =====================================

# –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –Ω–æ–≤—ã–º —Å–∫—Ä–∏–ø—Ç–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
dev:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@echo "üóÑÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
	docker-compose -f docker-compose.database.yml up -d postgres redis
	@echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞!"
	@echo "ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞..."
	./bot_manager.sh start

dev-stop:
	@echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É..."
	./bot_manager.sh stop
	docker-compose -f docker-compose.database.yml down

dev-restart:
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	./bot_manager.sh restart

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º
bot-start:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
	./bot_manager.sh start

bot-stop:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞..."
	./bot_manager.sh stop

bot-restart:
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
	./bot_manager.sh restart

bot-status:
	@echo "üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞..."
	./bot_manager.sh status

# bot-logs –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–º–∞–Ω–¥—É –≤—ã—à–µ

# Production –∫–æ–º–∞–Ω–¥—ã —Å –Ω–æ–≤—ã–º —Å–∫—Ä–∏–ø—Ç–æ–º
prod-bot-start:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (Production)..."
	./bot_manager_prod.sh start

prod-bot-stop:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ (Production)..."
	./bot_manager_prod.sh stop

prod-bot-restart:
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ (Production)..."
	./bot_manager_prod.sh restart

prod-bot-status:
	@echo "üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ (Production)..."
	./bot_manager_prod.sh status

prod-bot-health:
	@echo "üè• Health check –±–æ—Ç–∞ (Production)..."
	./bot_manager_prod.sh health

prod-bot-cleanup:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ (Production)..."
	./bot_manager_prod.sh cleanup
