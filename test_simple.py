#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
"""
import asyncio
import sys
import os

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.modules.work_journal.filters import IsWorkJournalActiveFilter, IsWorkJournalIdleFilter
from app.modules.daily_tasks.filters import IsAdminEmailFilter, IsEmailFilter


def test_filters_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤...")
    
    # Work Journal —Ñ–∏–ª—å—Ç—Ä—ã
    active_filter = IsWorkJournalActiveFilter()
    idle_filter = IsWorkJournalIdleFilter()
    print("   ‚úÖ Work Journal —Ñ–∏–ª—å—Ç—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
    # Daily Tasks —Ñ–∏–ª—å—Ç—Ä—ã  
    email_filter = IsEmailFilter()
    admin_email_filter = IsAdminEmailFilter()
    print("   ‚úÖ Daily Tasks —Ñ–∏–ª—å—Ç—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
    print("‚úÖ –í—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")


async def test_email_filter():
    """–¢–µ—Å—Ç email —Ñ–∏–ª—å—Ç—Ä–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º email —Ñ–∏–ª—å—Ç—Ä...")
    
    class MockMessage:
        def __init__(self, text):
            self.text = text
            self.from_user = type('MockUser', (), {'id': 28795547})()  # Admin ID
    
    email_filter = IsEmailFilter()
    
    # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ email
    valid_email = MockMessage("zarudesu@gmail.com")
    is_valid = await email_filter(valid_email)
    print(f"   Email 'zarudesu@gmail.com': {is_valid} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å True)")
    
    # –¢–µ—Å—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    invalid_text = MockMessage("–ø—Ä–∏–≤–µ—Ç –º–∏—Ä")
    is_invalid = await email_filter(invalid_text)
    print(f"   –¢–µ–∫—Å—Ç '–ø—Ä–∏–≤–µ—Ç –º–∏—Ä': {is_invalid} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å False)")
    
    print("‚úÖ Email —Ñ–∏–ª—å—Ç—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ú–û–î–£–õ–¨–ù–û–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–´")
    print("=" * 40)
    
    try:
        # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤
        test_filters_import()
        print()
        
        # –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤
        await test_email_filter()
        print()
        
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò!")
        print("‚úÖ –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –£–°–ü–ï–®–ï–ù!")
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(main())
